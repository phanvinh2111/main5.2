// <copyright file="PacketFunctions.cpp" company="MUnique">
// Licensed under the MIT License. See LICENSE file in the project root for full license information.
// </copyright>

//------------------------------------------------------------------------------
// <auto-generated>
//     This source code was auto-generated by an XSL transformation.
//     Do not change this file. Instead, change the XML data which contains
//     the packet definitions and re-run the transformation (publish/rebuild the
//     managed library project).
// </auto-generated>
//------------------------------------------------------------------------------

#include "stdafx.h"
#include "PacketFunctions_ClientToServer.h"
#include "PacketBindings_ClientToServer.h"

typedef void(CORECLR_DELEGATE_CALLTYPE* SendLogin)(int32_t, const wchar_t*, const wchar_t*, uint32_t, const BYTE*, const BYTE*);
inline SendLogin dotnet_SendLogin = reinterpret_cast<SendLogin>(symLoad(munique_client_library_handle, "ConnectionManager_SendLogin"));

void PacketFunctions_ClientToServer_Custom::SendLogin(const wchar_t* username, const wchar_t* password, const BYTE* clientVersion, const BYTE* clientSerial)
{
    dotnet_SendLogin(this->GetHandle(), username, password, GetTickCount(), clientVersion, clientSerial);
}

typedef void(CORECLR_DELEGATE_CALLTYPE* SendAuthenticateExt)(int32_t, uint16_t, uint32_t);
inline SendAuthenticateExt dotnet_SendAuthenticateExt = reinterpret_cast<SendAuthenticateExt>(symLoad(munique_client_library_handle, "ConnectionManager_SendAuthenticateExt"));

void PacketFunctions_ChatServer_Custom::SendAuthenticateExt(uint16_t roomId, uint32_t token)
{
    dotnet_SendAuthenticateExt(this->GetHandle(), roomId, token);
}

typedef void(CORECLR_DELEGATE_CALLTYPE* SendChatMessageExt)(int32_t, BYTE, const wchar_t*);
inline SendChatMessageExt dotnet_SendChatMessageExt = reinterpret_cast<SendChatMessageExt>(symLoad(munique_client_library_handle, "ConnectionManager_SendChatMessageExt"));

void PacketFunctions_ChatServer_Custom::SendChatMessageExt(BYTE senderIndex, const wchar_t* message)
{
    dotnet_SendChatMessageExt(this->GetHandle(), senderIndex, message);
}